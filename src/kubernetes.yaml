apiVersion: apps/v1
kind: Deployment
metadata:
  name: rabbitmq-deployment
  labels:
    app: rabbitmq
spec:
  replicas: 1
  selector:
    matchLabels:
      app: rabbitmq
  template:
    metadata:
      labels:
        app: rabbitmq
    spec:
      containers:
      - name: rabbitmq
        image: rabbitmq:latest
        ports:
        - containerPort: 5672
        volumeMounts:
        - mountPath: /var/lib/rabbitmq
          name: rabbitmq-storage
        livenessProbe:
          httpGet:
            path: /
            port: 5672
          initialDelaySeconds: 30
          periodSeconds: 30
        readinessProbe:
          httpGet:
            path: /
            port: 5672
          initialDelaySeconds: 30
          periodSeconds: 30
      volumes:
      - name: rabbitmq-storage
        hostPath:
          path: /path/to/your/local/directory  # Update this path accordingly
---
apiVersion: v1
kind: Service
metadata:
  name: rabbitmq-service
spec:
  selector:
    app: rabbitmq
  ports:
    - protocol: TCP
      port: 5672
      targetPort: 5672
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis-deployment
  labels:
    app: redis
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
    spec:
      containers:
      - name: redis
        image: redislabs/redisearch
        ports:
        - containerPort: 6379
        env:
        - name: REDIS_PASSWORD
          value: "password"
        - name: REDIS_PORT
          value: "6379"
        - name: REDIS_DATABASES
          value: "16"
        - name: USERNAME
          value: "user"
---
apiVersion: v1
kind: Service
metadata:
  name: redis-service
spec:
  selector:
    app: redis
  ports:
    - protocol: TCP
      port: 6379
      targetPort: 6379
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongo-deployment
  labels:
    app: mongo
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mongo
  template:
    metadata:
      labels:
        app: mongo
    spec:
      containers:
      - name: mongo
        image: mongo:latest
        ports:
        - containerPort: 27017
        env:
        - name: MONGO_INITDB_ROOT_USERNAME
          value: "root"
        - name: MONGO_INITDB_ROOT_PASSWORD
          value: "example"
---
apiVersion: v1
kind: Service
metadata:
  name: mongo-service
spec:
  selector:
    app: mongo
  ports:
    - protocol: TCP
      port: 27017
      targetPort: 27017
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend-deployment
  labels:
    app: backend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: backend
  template:
    metadata:
      labels:
        app: backend
    spec:
      containers:
      - name: backend
        image: your-backend-image
        ports:
        - containerPort: 5001
---
apiVersion: v1
kind: Service
metadata:
  name: backend-service
spec:
  selector:
    app: backend
  ports:
    - protocol: TCP
      port: 5001
      targetPort: 5001
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: auth-deployment
  labels:
    app: auth
spec:
  replicas: 1
  selector:
    matchLabels:
      app: auth
  template:
    metadata:
      labels:
        app: auth
    spec:
      containers:
      - name: auth
        image: your-auth-image
        ports:
        - containerPort: 8001
---
apiVersion: v1
kind: Service
metadata:
  name: auth-service
spec:
  selector:
    app: auth
  ports:
    - protocol: TCP
      port: 8001
      targetPort: 8001
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: gateway-deployment
  labels:
    app: gateway
spec:
  replicas: 1
  selector:
    matchLabels:
      app: gateway
  template:
    metadata:
      labels:
        app: gateway
    spec:
      containers:
      - name: gateway
        image: your-gateway-image
        ports:
        - containerPort: 80
---
apiVersion: v1
kind: Service
metadata:
  name: gateway-service
spec:
  selector:
    app: gateway
  ports:
    - protocol: TCP
      port: 8000
      targetPort: 80
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: sink-deployment
  labels:
    app: sink
spec:
  replicas: 1
  selector:
    matchLabels:
      app: sink
  template:
    metadata:
      labels:
        app: sink
    spec:
      containers:
      - name: sink
        image: your-sink-image
        env:
        - name: PYTHONUNBUFFERED
          value: "1"
        - name: SECRET_KEY
          value: "TODOMEMAMA"
        - name: ALGORITHM
          value: "HS256"
---
apiVersion: v1
kind: Service
metadata:
  name: sink-service
spec:
  selector:
    app: sink
  ports:
    - protocol: TCP
      port: 5001
      targetPort: 5001
